/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin editor.

  ==============================================================================
*/

#include "PluginProcessor.h"
#include "PluginEditor.h"


//==============================================================================
YingReverbAudioProcessorEditor::YingReverbAudioProcessorEditor (YingReverbAudioProcessor& p)
    : AudioProcessorEditor (&p), processor (p)
{
    // Make sure that before the constructor has finished, you've set the
    // editor's size to whatever you need it to be.
    setSize (400, 300);
    Mix.setSliderStyle(Slider::LinearBarVertical);
    Mix.setRange(0.0,1.0);
    Mix.setTextBoxStyle(Slider::NoTextBox, false, 90, 0);
    Mix.setPopupDisplayEnabled(true, this);
    Mix.setTextValueSuffix("mix");
    Mix.setValue(0.5);
    addAndMakeVisible(&Mix);
    
    Mix.addListener(this);
    
    reverbTime.setSliderStyle(Slider::LinearBarVertical);
    reverbTime.setRange(0.0,5.0);
    reverbTime.setTextBoxStyle(Slider::NoTextBox, false, 90, 0);
    reverbTime.setPopupDisplayEnabled(true, this);
    reverbTime.setTextValueSuffix("RT60");
    reverbTime.setValue(0.5);
    addAndMakeVisible(&reverbTime);
    
    reverbTime.addListener(this);
    
//    Bypass.setName("Bypass");
//    addAndMakeVisible(&Bypass);
//    Bypass.addListener(this);
//    
    
}

YingReverbAudioProcessorEditor::~YingReverbAudioProcessorEditor()
{
}


//==============================================================================

void YingReverbAudioProcessorEditor::sliderValueChanged(Slider* slider)
{
   // processor.T60 = processor.reverb.lowPass[0]->setRT60(reverbTime.getValue());
    processor.mix = Mix.getValue();
    processor.reverb.setReverbTime(reverbTime.getValue());
}

void YingReverbAudioProcessorEditor::paint (Graphics& g)
{
    g.fillAll (Colours::white);

    g.setColour (Colours::black);
    g.setFont (15.0f);
   // g.drawFittedText ("Dry/Wet Ratio", getLocalBounds(), Justification::centred, 1);
    g.drawFittedText ("mix",0,0,getWidth(),30,Justification::left, 1);
    g.drawFittedText("RT60",0,0, getWidth(), 30, Justification::centred, 1);
    g.drawFittedText("Bypass", 0, 0, getWidth(), 30, Justification::right, 1);
}

void YingReverbAudioProcessorEditor::resized()
{
    // This is generally where you'll want to lay out the positions of any
    // subcomponents in your editor..
    Mix.setBounds (40, 30, 20, getHeight() - 60);
    reverbTime.setBounds(160, 30, 20, getHeight() - 60);
    //Bypass.setBounds(80, 40, 20, getHeight()-120);
}
